@model SuiteCareers.Models.SessionsVM
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Sessions";
    Layout = "_Layout";
}

<div style="height: 100%">
    <div class="row my-3">
        <div class="col-xl-12">
            <div class="card overflow-auto mh-100">
                <div class="card-body p-4 d-flex flex-column">

                    <div class="row justify-content-between">

                        <form id="sessionsForm" asp-action="Sessions">
                        <div class="col-sm-6 mb-sm-2">
                            <div class="row h-100 ">
                                <div class="col-lg-6 align-self-center">
                                    <p class="fw-bold fs-5 mb-0">All Sessions</p>
                                </div>
                                    <div class="col-lg-6 align-self-center py-1">
                                        <input type="text" id="searchInput" name="term" class="form-control" value="@Model.Term" placeholder="Search by user or session ID" />
                                    </div>
                                    <div style="display: flex;">
                                        <div>
                                            <button type="submit" class="btn btn-primary me-1">Search</button>
                                        </div>
                                        <div>
                                            <button type="button" class="btn btn-primary" onclick="resetAndSubmitForm()">Reset</button>
                                        </div>
                                    </div>
                                
                            </div>

                        </div>

                        <div class="col-sm-6">
                            <div class="row">
                                <div class="col-lg-5 py-1">
                                    
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">From</span>
                                        </div>
                                        <input type="date" class="form-control" id="from-date" name="start">
                                    </div>
                                </div>
                                <div class="col-lg-5 py-1">
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">To</span>
                                        </div>
                                        <input type="date" class="form-control" id="to-date" name="end">
                                    </div>
                                </div>
                                <div class="col-lg-2 py-1 d-sm-flex justify-content-end">
                                    @*<button id="filter" type="submit" class="btn btn-primary">Filter</button>*@
                                </div>
                            </div>
                            
                        </div>
                        </form>
                    </div>
                    
                    <div class="row flex-fill d-flex">
                        <table id="allSessions"class="table table-hover flex-fill mb-0">
                            <thead>
                                <tr>
                                    <th scope="col">
                                        <a href="/Home/Sessions?term=@Model.Term&orderBy=@Model.SessionIDSortParm">Session ID</a>
                                    </th>
                                    <th scope="col">
                                        <a href="/Home/Sessions?term=@Model.Term&orderBy=@Model.UserSortParm">User</a>
                                    </th>
                                    <th scope="col">
                                        <a href="/Home/Sessions?term=@Model.Term&orderBy=@Model.DateSortParm">Date</a>
                                    </th>
                                    <th scope="col">
                                        <a href="/Home/Sessions?term=@Model.Term&orderBy=@Model.TimeSortParm">Time</a>
                                    </th>
                                    <th scope="col">Duration</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var session in Model.Sessions)
                                {
                                    <tr>                                        
                                        <td scope="row">
                                            @session.SessionId
                                        </td>
                                        <td scope="row">
                                            @session.User.LastName, @session.User.FirstName
                                        </td>
                                        <td scope="row">
                                            @session.Date.ToString("MMMM d yyyy")
                                        </td>
                                        <td scope="row">
                                            @session.Date.ToString("h:mm tt")
                                        </td>
                                        <td scope="row">
                                            N/A
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <nav aria-label="Page navigation example">
                            <ul class="pagination">
                                @if (Model.CurrentPage > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="/Home/Sessions?term=@Model.Term&orderBy=@Model.OrderBy&currentPage=@(Model.CurrentPage-1)" aria-label="Previous">
                                            <span aria-hidden="true">&laquo;</span>
                                        </a>
                                    </li>
                                }
                                @for (int i = 1; i <= Model.TotalPages; i++)
                                {
                                    if (i == Model.CurrentPage)
                                    {
                                        <li class="page-item"><a class="page-link active" href="/Home/Sessions?term=@Model.Term&orderBy=@Model.OrderBy&currentPage=@i"> @i</a></li>
                                    }
                                    else
                                    {
                                        <li class="page-item"><a class="page-link" href="/Home/Sessions?term=@Model.Term&orderBy=@Model.OrderBy&currentPage=@i"> @i</a></li>
                                    }
                                }
                                @if (Model.CurrentPage < Model.TotalPages)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="/Home/Sessions?term=@Model.Term&orderBy=@Model.OrderBy&currentPage=@(Model.CurrentPage+1)" aria-label="Next">
                                            <span aria-hidden="true">&raquo;</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        function resetAndSubmitForm() {
            document.getElementById('searchInput').value = '';
            document.getElementById('sessionsForm').submit();
        }
    </script>
}

@*@section scripts{
    <script>

        //Date Filtering
        // Get table rows and date filter elements
        const tableRows = document.querySelectorAll('table tbody tr');
        const fromDateInput = document.getElementById('from-date');
        const toDateInput = document.getElementById('to-date');
        const filterButton = document.getElementById('filter');

        // Add event listener to filter button
        filterButton.addEventListener('click', () => {
            // Get dates from input values
            const fromDate = new Date(fromDateInput.value);
            fromDate.setUTCHours(fromDate.getUTCHours() + 7);
            const toDate = new Date(toDateInput.value);
            toDate.setUTCHours(toDate.getUTCHours() + 7);

            // Loop through each row in the table
            for (let i = 0; i < tableRows.length; i++) {
                // Get the date cell for the row
                const dateCell = tableRows[i].querySelector('.date-cell');

                // Check if the row has a date cell
                if (dateCell) {
                    // Get the date value from the cell
                    const dateValue = new Date(dateCell.textContent);
                    console.log(dateValue);

                    // Hide or show the row based on the date range
                    if (dateValue >= fromDate && dateValue <= toDate) {
                        tableRows[i].classList.remove('d-none');
                    } else {
                        tableRows[i].classList.add('d-none');
                    }
                }
            }
        });
    </script>
    
}*@
